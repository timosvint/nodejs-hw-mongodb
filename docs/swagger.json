{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "tmanoob-api code",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "the api what i created"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nodejs-hw-mongodb-ndlc.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "operations about contacts"
    },
    {
      "name": "Auth",
      "description": "operation about auth"
    }
  ],
  "paths": {
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "reset password",
        "operationId": "resetPasswordController",
        "description": "change user password",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "reset token"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "124125152"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "password succesfull reseted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully reset."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "send reset email",
        "operationId": "resetAuth",
        "description": "send password reset link to user email",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "mygmail@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "reset password sended to user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email has been successfully sent."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "refresh token",
        "operationId": "authRefresh",
        "description": "refresh  token",
        "security": [],
        "responses": {
          "200": {
            "description": "token was refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "ey5916281902fas09wa5w15012508"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "logout user",
        "operationId": "authLogout",
        "description": "logout user from database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "user was logout"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "register user",
        "operationId": "authRegister",
        "description": "register user to database",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password",
                  "name"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "youremail@gmail.com"
                  },
                  "name": {
                    "type": "string",
                    "example": "noobik2124"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "1241254125216"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "user was registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "login user",
        "operationId": "authLogin",
        "description": "login user to database",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "mygmail@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "5215621612"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user was logined",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "ey5916281902fas09wa5w15012508"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "get list of contact",
        "operationId": "getContact",
        "description": "get contact full list from database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "description": "everyone who isFavourite."
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "work"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "contact list was found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "contact list was found"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "sortBy",
                        "sortOrder",
                        "contactType"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contactByIdSchema"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 5
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPage": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "postContact",
        "description": "creating contact to database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber"
                ],
                "properties": {
                  "name": {
                    "description": "contact name",
                    "type": "string",
                    "example": "john doe"
                  },
                  "phoneNumber": {
                    "description": "contact phoneNumber",
                    "type": "string",
                    "example": "+380215125"
                  },
                  "email": {
                    "description": "contact email",
                    "type": "string",
                    "format": "email",
                    "example": "wawasik@gmail.com"
                  },
                  "photo": {
                    "description": "contact photo",
                    "type": "string",
                    "format": "binary"
                  },
                  "isFavourite": {
                    "description": "isFavourite contact",
                    "type": "boolean",
                    "example": false
                  },
                  "userId": {
                    "description": "contact userId",
                    "type": "string",
                    "example": "6755asdfaw6asg6"
                  },
                  "contactType": {
                    "description": "contactType",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "work"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "create contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contactByIdSchema"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContactById",
        "description": "getting contact by id from database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "tw1621561wrarfc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id tw1621561wrarfc"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contactByIdSchema"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "delete contact by id",
        "operationId": "deleteContact",
        "description": "delete contact by id from database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "tw1621561wrarfc"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "contact deleted"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "update contact",
        "operationId": "updateContact",
        "description": "updating contact to database",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the contact to update"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "contact name",
                    "type": "string",
                    "example": "john doe"
                  },
                  "phoneNumber": {
                    "description": "contact phoneNumber",
                    "type": "string",
                    "example": "+380215125"
                  },
                  "email": {
                    "description": "contact email",
                    "type": "string",
                    "format": "email",
                    "example": "wawasik@gmail.com"
                  },
                  "photo": {
                    "description": "contact photo",
                    "type": "string",
                    "format": "binary"
                  },
                  "isFavourite": {
                    "description": "isFavourite contact",
                    "type": "boolean",
                    "example": false
                  },
                  "userId": {
                    "description": "contact userId",
                    "type": "string",
                    "example": "6755asdfaw6asg6"
                  },
                  "contactType": {
                    "description": "contactType",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "work"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contactByIdSchema"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "404": {
        "description": "user not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "contactByIdSchema": {
        "type": "object",
        "required": [
          "id",
          "name",
          "phone"
        ],
        "properties": {
          "id": {
            "description": "contacts id",
            "type": "string",
            "example": "asaysy2183561saf"
          },
          "name": {
            "description": "contacts name",
            "type": "string",
            "example": "john doe"
          },
          "email": {
            "description": "contacts email",
            "type": "string",
            "format": "email",
            "example": "noobik2124@gmail.com"
          },
          "phone": {
            "description": "contacts phone number",
            "type": "string",
            "example": "+23421256"
          }
        }
      }
    }
  }
}